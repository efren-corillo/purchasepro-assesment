version: '3'

networks:
  webapp:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: ppro_nginx
    ports:
    - "8000:80"
    links:
      - app
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/site.conf:/etc/nginx/conf.d/default.conf:rw
      - ./docker/logs/nginx:/var/logs/nginx:rw
    depends_on:
      - app
      - mysql
    networks:
      - webapp
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ppro_app
    volumes:
      - ./:/var/www/html
    ports:
      - "9001:9000"
    networks:
      - webapp
  npm:
    image: node:20
    container_name: ppro_npm
    user: "1000:1000"
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

# Mysql DB
  mysql:
    image: mysql:8.0
    container_name: ppro_db
    restart: unless-stopped
    tty: true
    env_file:
      - .env
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - webapp

  mailhog:
    image: mailhog/mailhog
    container_name: ppro_mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web interface
    networks:
      - webapp

  redis:
    image: redis:4.0
    container_name: ppro_redis
    ports:
      - "6379:6379"
    networks:
      - webapp

volumes:
  mysql:
    driver: local

